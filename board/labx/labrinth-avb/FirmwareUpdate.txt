Some general instructions for the firmware update scheme:

There are two different categories of firmware image for
the design: "golden" and "runtime".

The golden images comprise a set of binaries which are
only programmed at the time of manufacture via JTAG, and 
therefore are always capable of performing a firmware update.
No other functionality is expected of them.  They include:

Image Name              Flash Offset   Description
------------------------------------------------------
Labrinth_Fpga_Boot.bin  0x00000000     Golden FPGA image
u-boot.bin              0x00200000     U-Boot bootloader
u-boot-env.bin          0x00FE0000     U-Boot environment

Each of the runtime-updateable firmware images is supplied
prefixed with a header, which includes the firmware release
version associated with the image, as well as its CRC32
(which is calculated without the header).  They include:

Image Name              Flash Offset   Description
------------------------------------------------------
linux.tes               0x00260000     Linux kernel image
rootfs_romfs.tes        0x00620000     Root filesystem image
usr_romfs.tes           0x00800000     User applications image
Labrinth_Fpga.tes       0x00BE0000     Run-time FPGA image
settings_jffs2.tes      0x00DE0000     Settings filesystem image

Firmware updates must be performed in a coherent manner;
that is to say, all run-time images must be updated at the
same time, with a coherent revision number common to all.

The first step in an update is to erase the Flash partition
used to store revision and CRC information for each image.
This is accomplished using the FirmwareUpdate::sendCommand()
IDL interface method, with the argument "run erase_imagecrcs".

After this, the various images may be uploaded and programmed
by invoking the startFirmwareUpdate() and sendDataPacket()
methods for each.
