
#ifndef __BACKPLANE_BRIDGE_IDL__
#define __BACKPLANE_BRIDGE_IDL__

#include "AvbDefs.idl"

/**
 * @brief Backplane legacy packet bridge
 */
module BackplaneBridge
{

  /* Enumerated type defining the AVB ports which can be bridge to */
  enum LegacyBridgePort
  {
    e_AVB_PORT_0,
    e_AVB_PORT_1
  };

  interface Services
  {
    /**
     * Configures the packet bridge for use, disabling or enabling it and
     * selecting which of the two possible AVB ports which may be bridged to.
     *
     * @param bridgeEnabled - True if the bridge is to be enabled, false otherwise
     * @param whichPort     - Port selection to bridge to
     */
    AvbDefs::ErrorCode configureBridge(in boolean bridgeEnabled,
                                       in LegacyBridgePort whichPort);

    /**
     * Configures one of the ports' match units to match a specific destination
     * MAC address
     *
     * @param whichPort  - Port to modify a match unit upon
     * @param whichUnit  - Match unit index to modify
     * @param macAddress - Destination MAC address to match
     */
    AvbDefs::ErrorCode enableMatchUnit(in LegacyBridgePort whichPort,
                                       in uint32_t whichUnit,
                                       in AvbDefs::MacAddress matchAddress);

    /**
     * Disables one of the ports' match units
     *
     * @param whichPort - Port to disable a match unit upon
     * @param whichUnit - Match unit index to disable
     */
    AvbDefs::ErrorCode disableMatchUnit(in LegacyBridgePort whichPort,
                                        in uint32_t whichUnit);
  };

  interface Attributes
  {
    /**
     * Number of match units supported per port
     */
    AvbDefs::ErrorCode numMatchUnits(out uint32_t matchUnits);
  };
};

#endif // __BACKPLANE_BRIDGE_IDL__

// vi:set ai sw=4 expandtab ts=4:

